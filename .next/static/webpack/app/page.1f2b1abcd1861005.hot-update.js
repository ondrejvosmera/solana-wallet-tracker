"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/donutChart.tsx":
/*!***************************************!*\
  !*** ./app/components/donutChart.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_donut_chart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-donut-chart */ \"(app-pages-browser)/./node_modules/react-donut-chart/dist/index.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst CustomDonutChart = (param)=>{\n    let { solBalanceInUsdc, calculateTotalTokenValue, calculateTotalNftPriceInUsd, isDarkMode } = param;\n    _s();\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n    // your existing useEffect content\n    }, [\n        isDarkMode\n    ]); // Make sure to include all relevant dependencies\n    // Custom format function for DonutChart\n    const customFormat = (value, total)=>{\n        // Since we want to show absolute dollar values, we don't need to use 'total'\n        return \"$\".concat(value.toFixed(2));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: chartRef,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_donut_chart__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n            data: [\n                {\n                    label: \"SOL\",\n                    value: solBalanceInUsdc ? solBalanceInUsdc : 0\n                },\n                {\n                    label: \"Tokens\",\n                    value: calculateTotalTokenValue()\n                },\n                {\n                    label: \"NFTs\",\n                    value: calculateTotalNftPriceInUsd()\n                }\n            ],\n            width: 450,\n            height: 300,\n            colors: [\n                \"#03E1FF\",\n                \"#00FFA3\",\n                \"#DC1FFF\"\n            ],\n            strokeColor: isDarkMode ? \"#FFFFFF\" : \"#000\",\n            interactive: false,\n            formatValues: (value, total)=>customFormat(value, total)\n        }, void 0, false, {\n            fileName: \"/Users/ondrejvosmera/Desktop/solana-wallet-tracker/app/components/donutChart.tsx\",\n            lineNumber: 31,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/ondrejvosmera/Desktop/solana-wallet-tracker/app/components/donutChart.tsx\",\n        lineNumber: 30,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CustomDonutChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = CustomDonutChart;\n/* harmony default export */ __webpack_exports__[\"default\"] = (CustomDonutChart);\nvar _c;\n$RefreshReg$(_c, \"CustomDonutChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL2RvbnV0Q2hhcnQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUQ7QUFDTjtBQVMzQyxNQUFNSSxtQkFBb0Q7UUFBQyxFQUN6REMsZ0JBQWdCLEVBQ2hCQyx3QkFBd0IsRUFDeEJDLDJCQUEyQixFQUMzQkMsVUFBVSxFQUNYOztJQUNDLE1BQU1DLFdBQVdSLDZDQUFNQSxDQUFpQjtJQUV4Q0MsZ0RBQVNBLENBQUM7SUFDUixrQ0FBa0M7SUFDcEMsR0FBRztRQUFDTTtLQUFXLEdBQUcsaURBQWlEO0lBRW5FLHdDQUF3QztJQUN4QyxNQUFNRSxlQUFlLENBQUNDLE9BQWVDO1FBQ25DLDZFQUE2RTtRQUM3RSxPQUFPLElBQXFCLE9BQWpCRCxNQUFNRSxPQUFPLENBQUM7SUFDM0I7SUFFQSxxQkFDRSw4REFBQ0M7UUFBSUMsS0FBS047a0JBQ1IsNEVBQUNOLHlEQUFVQTtZQUNUYSxNQUFNO2dCQUNKO29CQUNFQyxPQUFPO29CQUNQTixPQUFPTixtQkFBbUJBLG1CQUFtQjtnQkFDL0M7Z0JBQ0E7b0JBQ0VZLE9BQU87b0JBQ1BOLE9BQU9MO2dCQUNUO2dCQUNBO29CQUNFVyxPQUFPO29CQUNQTixPQUFPSjtnQkFDVDthQUNEO1lBQ0RXLE9BQU87WUFDUEMsUUFBUTtZQUNSQyxRQUFRO2dCQUFDO2dCQUFVO2dCQUFXO2FBQVU7WUFDeENDLGFBQWFiLGFBQWEsWUFBWTtZQUN0Q2MsYUFBYTtZQUNiQyxjQUFjLENBQUNaLE9BQU9DLFFBQVVGLGFBQWFDLE9BQU9DOzs7Ozs7Ozs7OztBQUk1RDtHQTVDTVI7S0FBQUE7QUE4Q04sK0RBQWVBLGdCQUFnQkEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY29tcG9uZW50cy9kb251dENoYXJ0LnRzeD81ZWYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBEb251dENoYXJ0IGZyb20gJ3JlYWN0LWRvbnV0LWNoYXJ0JztcblxuaW50ZXJmYWNlIEN1c3RvbURvbnV0Q2hhcnRQcm9wcyB7XG4gIHNvbEJhbGFuY2VJblVzZGM6IG51bWJlciB8IG51bGw7XG4gIGNhbGN1bGF0ZVRvdGFsVG9rZW5WYWx1ZTogKCkgPT4gbnVtYmVyO1xuICBjYWxjdWxhdGVUb3RhbE5mdFByaWNlSW5Vc2Q6ICgpID0+IG51bWJlcjtcbiAgaXNEYXJrTW9kZTogYm9vbGVhbjtcbn1cblxuY29uc3QgQ3VzdG9tRG9udXRDaGFydDogUmVhY3QuRkM8Q3VzdG9tRG9udXRDaGFydFByb3BzPiA9ICh7XG4gIHNvbEJhbGFuY2VJblVzZGMsXG4gIGNhbGN1bGF0ZVRvdGFsVG9rZW5WYWx1ZSxcbiAgY2FsY3VsYXRlVG90YWxOZnRQcmljZUluVXNkLFxuICBpc0RhcmtNb2RlXG59KSA9PiB7XG4gIGNvbnN0IGNoYXJ0UmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIHlvdXIgZXhpc3RpbmcgdXNlRWZmZWN0IGNvbnRlbnRcbiAgfSwgW2lzRGFya01vZGVdKTsgLy8gTWFrZSBzdXJlIHRvIGluY2x1ZGUgYWxsIHJlbGV2YW50IGRlcGVuZGVuY2llc1xuXG4gIC8vIEN1c3RvbSBmb3JtYXQgZnVuY3Rpb24gZm9yIERvbnV0Q2hhcnRcbiAgY29uc3QgY3VzdG9tRm9ybWF0ID0gKHZhbHVlOiBudW1iZXIsIHRvdGFsOiBudW1iZXIpID0+IHtcbiAgICAvLyBTaW5jZSB3ZSB3YW50IHRvIHNob3cgYWJzb2x1dGUgZG9sbGFyIHZhbHVlcywgd2UgZG9uJ3QgbmVlZCB0byB1c2UgJ3RvdGFsJ1xuICAgIHJldHVybiBgJCR7dmFsdWUudG9GaXhlZCgyKX1gO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByZWY9e2NoYXJ0UmVmfT5cbiAgICAgIDxEb251dENoYXJ0XG4gICAgICAgIGRhdGE9e1tcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogJ1NPTCcsXG4gICAgICAgICAgICB2YWx1ZTogc29sQmFsYW5jZUluVXNkYyA/IHNvbEJhbGFuY2VJblVzZGMgOiAwLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6ICdUb2tlbnMnLFxuICAgICAgICAgICAgdmFsdWU6IGNhbGN1bGF0ZVRvdGFsVG9rZW5WYWx1ZSgpLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6ICdORlRzJyxcbiAgICAgICAgICAgIHZhbHVlOiBjYWxjdWxhdGVUb3RhbE5mdFByaWNlSW5Vc2QoKSxcbiAgICAgICAgICB9LFxuICAgICAgICBdfVxuICAgICAgICB3aWR0aD17NDUwfVxuICAgICAgICBoZWlnaHQ9ezMwMH1cbiAgICAgICAgY29sb3JzPXtbJyMwM0UxRkYnLCcjMDBGRkEzJywgJyNEQzFGRkYnXX1cbiAgICAgICAgc3Ryb2tlQ29sb3I9e2lzRGFya01vZGUgPyAnI0ZGRkZGRicgOiAnIzAwMCd9XG4gICAgICAgIGludGVyYWN0aXZlPXtmYWxzZX1cbiAgICAgICAgZm9ybWF0VmFsdWVzPXsodmFsdWUsIHRvdGFsKSA9PiBjdXN0b21Gb3JtYXQodmFsdWUsIHRvdGFsKX1cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDdXN0b21Eb251dENoYXJ0O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlUmVmIiwidXNlRWZmZWN0IiwiRG9udXRDaGFydCIsIkN1c3RvbURvbnV0Q2hhcnQiLCJzb2xCYWxhbmNlSW5Vc2RjIiwiY2FsY3VsYXRlVG90YWxUb2tlblZhbHVlIiwiY2FsY3VsYXRlVG90YWxOZnRQcmljZUluVXNkIiwiaXNEYXJrTW9kZSIsImNoYXJ0UmVmIiwiY3VzdG9tRm9ybWF0IiwidmFsdWUiLCJ0b3RhbCIsInRvRml4ZWQiLCJkaXYiLCJyZWYiLCJkYXRhIiwibGFiZWwiLCJ3aWR0aCIsImhlaWdodCIsImNvbG9ycyIsInN0cm9rZUNvbG9yIiwiaW50ZXJhY3RpdmUiLCJmb3JtYXRWYWx1ZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/donutChart.tsx\n"));

/***/ })

});