import axios, { AxiosError } from 'axios';
export async function rpcCall(connection, config) {
    var _a;
    try {
        const rpcUrl = connection.rpcEndpoint;
        if (new URL(rpcUrl).hostname !== 'rpc.shyft.to') {
            throw new Error("Currently DAS API support available only for the 'mainnet-beta' cluster");
        }
        const headers = {
            'Content-Type': 'application/json',
        };
        const { data } = await axios.request({
            ...config,
            method: 'post',
            baseURL: rpcUrl,
            headers,
        });
        return data;
    }
    catch (error) {
        if (error instanceof AxiosError) {
            const err = error;
            const apiError = (_a = err.response) === null || _a === void 0 ? void 0 : _a.data;
            if (typeof apiError.error === 'object') {
                if ('message' in apiError.error) {
                    throw new Error(apiError.error['message']);
                }
                throw new Error(JSON.stringify(apiError.error));
            }
            if (typeof apiError.error === 'string') {
                throw new Error(apiError.error);
            }
            if (typeof apiError['message'] === 'string') {
                throw new Error(apiError['message']);
            }
            throw apiError.error;
        }
        else {
            throw error;
        }
    }
}
//# sourceMappingURL=rpc-call.js.map