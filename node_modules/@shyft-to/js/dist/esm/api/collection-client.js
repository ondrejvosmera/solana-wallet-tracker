import { isNumber } from 'lodash';
import { restApiCall } from '../utils';
import { Network } from '../types';
export class CollectionClient {
    constructor(config) {
        this.config = config;
    }
    async getNfts(input) {
        var _a;
        try {
            const params = {
                network: (_a = input === null || input === void 0 ? void 0 : input.network) !== null && _a !== void 0 ? _a : this.config.network,
                collection_address: input.collectionAddress,
            };
            if (params.network !== Network.Mainnet) {
                throw new Error('This operation only available on mainnet-beta');
            }
            if (isNumber(input === null || input === void 0 ? void 0 : input.page)) {
                if (input.page < 1) {
                    throw new Error('should not be less than 1: size');
                }
                params['page'] = input.page;
            }
            if (isNumber(input === null || input === void 0 ? void 0 : input.size)) {
                if (input.size > 50 || input.size < 1) {
                    throw new Error('allowed between 1 to 50: size');
                }
                params['size'] = input.size;
            }
            const data = await restApiCall(this.config.apiKey, {
                method: 'get',
                url: 'collections/get_nfts',
                params,
            });
            const collectionNfts = data.result;
            return collectionNfts;
        }
        catch (error) {
            throw error;
        }
    }
}
//# sourceMappingURL=collection-client.js.map