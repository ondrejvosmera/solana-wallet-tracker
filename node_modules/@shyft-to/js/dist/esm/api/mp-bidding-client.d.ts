import { ShyftConfig } from '../utils';
import { BidsSortOptions, BidsSortOrder, Network, NftBuyResponse, ServiceCharge, ActiveBids, NftBidResponse } from '../types';
export declare class MpBiddingClient {
    private readonly config;
    constructor(config: ShyftConfig);
    active(input: {
        network?: Network;
        marketplaceAddress: string;
        buyerAddress?: string;
        collectionAddress?: string;
        nftAddress?: string;
        sortBy?: BidsSortOptions;
        sortOrder?: BidsSortOrder;
        page?: number;
        size?: number;
    }): Promise<ActiveBids>;
    bid(input: {
        network?: Network;
        marketplaceAddress: string;
        nftAddress: string;
        price: number;
        buyerWallet: string;
        isGasLess?: boolean;
        serviceCharge?: ServiceCharge;
    }): Promise<NftBidResponse>;
    cancelBid(input: {
        network?: Network;
        marketplaceAddress: string;
        bidState: string;
        buyerWallet: string;
        isGasLess?: boolean;
    }): Promise<string>;
    acceptBid(input: {
        network?: Network;
        marketplaceAddress: string;
        bidState: string;
        sellerWallet: string;
    }): Promise<NftBuyResponse>;
}
