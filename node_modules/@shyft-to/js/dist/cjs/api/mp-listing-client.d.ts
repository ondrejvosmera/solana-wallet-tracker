import { ShyftConfig } from '../utils';
import { ActiveListings, ActiveListingSortBy, ActiveListingSortOrder, ListedNftDetail, Network, NftBuyResponse, NftListResponse, ServiceCharge } from '../types';
export declare class MpListingClient {
    private readonly config;
    constructor(config: ShyftConfig);
    active(input: {
        network?: Network;
        marketplaceAddress: string;
        sellerAddress?: string;
        collectionAddress?: string;
        nftAddress?: string;
        sortBy?: ActiveListingSortBy;
        sortOrder?: ActiveListingSortOrder;
        page?: number;
        size?: number;
    }): Promise<ActiveListings>;
    detail(input: {
        network?: Network;
        marketplaceAddress: string;
        listState: string;
    }): Promise<Omit<ListedNftDetail, 'status'>>;
    bySeller(input: {
        network?: Network;
        marketplaceAddress: string;
        sellerAddress: string;
    }): Promise<Omit<ListedNftDetail, 'status'>[]>;
    activeSellers(input: {
        network?: Network;
        marketplaceAddress: string;
    }): Promise<string[]>;
    list(input: {
        network?: Network;
        marketplaceAddress: string;
        nftAddress: string;
        price: number;
        sellerWallet: string;
        isGasLess?: boolean;
        serviceCharge?: ServiceCharge;
    }): Promise<NftListResponse>;
    unlist(input: {
        network?: Network;
        marketplaceAddress: string;
        listState: string;
        sellerWallet: string;
    }): Promise<string>;
    buy(input: {
        network?: Network;
        marketplaceAddress: string;
        nftAddress: string;
        price: number;
        sellerWallet: string;
        buyerWallet: string;
        serviceCharge?: ServiceCharge;
    }): Promise<NftBuyResponse & {
        signers: string[];
    }>;
}
