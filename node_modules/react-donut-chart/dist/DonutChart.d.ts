import React from 'react';
export declare type Item = {
    className?: string;
    isEmpty?: boolean;
    label: string;
    value: number;
};
export declare type ItemWithRenderProps = Item & {
    angle: number;
    classNames: string;
    clickHandlers?: {
        onClick: () => void;
        onMouseEnter: () => void;
        onMouseLeave: () => void;
    };
    fill: string;
    index: number;
    opacity: number;
    stroke: string;
};
export declare type Colors = string[];
export declare type Props = {
    className?: string;
    clickToggle?: boolean;
    colorFunction?: (colors: Colors, index: number) => string;
    colors?: Colors;
    data: Item[];
    emptyColor?: string;
    emptyOffset?: number;
    formatValues?: (value: number, total: number) => string;
    height?: number;
    interactive?: boolean;
    innerRadius?: number;
    legend?: boolean;
    onClick?: (item: Item, toggled: boolean) => void;
    onMouseEnter?: (item: Item) => void;
    onMouseLeave?: (item: Item) => void;
    outerRadius?: number;
    selectedOffset?: number;
    strokeColor?: string;
    toggledOffset?: number;
    width?: number;
};
export declare type Context = Pick<Required<Props>, 'className' | 'emptyOffset' | 'innerRadius' | 'outerRadius' | 'selectedOffset' | 'toggledOffset' | 'width'> & {
    graphWidth: number;
    selected: Item | null;
    toggleSelect: boolean;
    total: number;
};
export declare const DonutChartContext: React.Context<Context>;
declare const DonutChart: React.FC<Props>;
export default DonutChart;
//# sourceMappingURL=DonutChart.d.ts.map