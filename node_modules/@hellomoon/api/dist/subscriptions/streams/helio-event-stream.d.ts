import { DataStreamFilterDate, DataStreamFilterNumeric, DataStreamFilterText, DataStreamFilterEnum, DataStreamType } from "../util/datastream-filters.const";
import type { DataStreamFieldMap } from "../models/data-stream-field-map.interface";
import { BaseDataStream } from "../models/base-data-stream.class";
interface HelioEventStreamFilter {
    [key: string]: DataStreamType<string>;
    blockId: DataStreamFilterNumeric;
    blockTime: DataStreamFilterDate;
    transactionId: DataStreamFilterText;
    transactionPosition: DataStreamFilterNumeric;
    instructionOrdinal: DataStreamFilterNumeric;
    instructionName: DataStreamFilterText;
    eventType: DataStreamFilterEnum<"HelioNft">;
    "helioNftEvent.owner": DataStreamFilterText;
    "helioNftEvent.ownerNftAccount": DataStreamFilterText;
    "helioNftEvent.escrowAccount": DataStreamFilterText;
    "helioNftEvent.escrowNftAccount": DataStreamFilterText;
    "helioNftEvent.escrowPda": DataStreamFilterText;
    "helioNftEvent.mint": DataStreamFilterText;
    "helioNftEvent.currency": DataStreamFilterText;
    "helioNftEvent.sender": DataStreamFilterText;
    "helioNftEvent.senderTokenAccount": DataStreamFilterText;
    "helioNftEvent.senderNftAccount": DataStreamFilterText;
    "helioNftEvent.recipient": DataStreamFilterText;
    "helioNftEvent.recipientTokenAccount": DataStreamFilterText;
    "helioNftEvent.helioFeeTokenAccount": DataStreamFilterText;
    "helioNftEvent.daoFeeTokenAccount": DataStreamFilterText;
    "helioNftEvent.helioFeeAccount": DataStreamFilterText;
    "helioNftEvent.daoFeeAccount": DataStreamFilterText;
    "helioNftEvent.unitPrice": DataStreamFilterNumeric;
    "helioNftEvent.fee": DataStreamFilterNumeric;
    "helioNftEvent.amount": DataStreamFilterNumeric;
    "helioNftEvent.helioFeeAmount": DataStreamFilterNumeric;
    "helioNftEvent.daoFeeAmount": DataStreamFilterNumeric;
}
export declare class HelioEventStream extends BaseDataStream<HelioEventStreamFilter> {
    id: string;
    static fieldMap: Record<string, DataStreamFieldMap>;
}
export {};
