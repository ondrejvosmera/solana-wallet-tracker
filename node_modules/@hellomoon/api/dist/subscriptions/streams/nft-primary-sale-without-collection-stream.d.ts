import { DataStreamFilterDate, DataStreamFilterNumeric, DataStreamFilterText, DataStreamFilterBoolean, DataStreamType } from "../util/datastream-filters.const";
import type { DataStreamFieldMap } from "../models/data-stream-field-map.interface";
import { BaseDataStream } from "../models/base-data-stream.class";
interface NftPrimarySaleWithoutCollectionStreamFilter {
    [key: string]: DataStreamType<string>;
    programId: DataStreamFilterText;
    instructionName: DataStreamFilterText;
    price: DataStreamFilterNumeric;
    payerAccount: DataStreamFilterText;
    isSmartMinter: DataStreamFilterBoolean;
    sellerAccount: DataStreamFilterText;
    mint: DataStreamFilterText;
    blockTime: DataStreamFilterDate;
    blockId: DataStreamFilterNumeric;
    transactionId: DataStreamFilterText;
    transactionPosition: DataStreamFilterNumeric;
    instructionOrdinal: DataStreamFilterNumeric;
}
export declare class NftPrimarySaleWithoutCollectionStream extends BaseDataStream<NftPrimarySaleWithoutCollectionStreamFilter> {
    id: string;
    static fieldMap: Record<string, DataStreamFieldMap>;
}
export {};
