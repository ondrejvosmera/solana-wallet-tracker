import { DataStreamCompositeTypeFilter, DataStreamFilterDate, DataStreamFilterNumeric, DataStreamFilterText, DataStreamType } from "../util/datastream-filters.const";
import type { DataStreamFieldMap } from "../models/data-stream-field-map.interface";
import { BaseDataStream } from "../models/base-data-stream.class";
interface BalanceChangeStreamFilter {
    [key: string]: DataStreamType<string>;
    account: DataStreamCompositeTypeFilter<DataStreamFilterText, "account" | "accountOwner">;
    mint: DataStreamFilterText;
    amount: DataStreamFilterNumeric;
    balance: DataStreamCompositeTypeFilter<DataStreamFilterNumeric, "preBalance" | "postBalance">;
    decimals: DataStreamFilterNumeric;
    blockTime: DataStreamFilterDate;
    blockId: DataStreamFilterNumeric;
    transactionId: DataStreamFilterText;
    transactionPosition: DataStreamFilterNumeric;
}
export declare class BalanceChangeStream extends BaseDataStream<BalanceChangeStreamFilter> {
    id: string;
    static fieldMap: Record<string, DataStreamFieldMap>;
}
export {};
