import type { ISendable, HttpMethod } from "./RestClient.class";
export declare abstract class BaseRequest<TReq, TRes> implements ISendable<TReq | undefined> {
    readonly body: TReq | undefined;
    readonly params: Record<string, string | number>;
    readonly headers: Record<string, string>;
    readonly customParams: string;
    private static baseUrl;
    abstract method: HttpMethod;
    abstract url: string;
    constructor(body?: TReq | undefined, params?: Record<string, string | number>, headers?: Record<string, string>, customParams?: string);
    getRequestUrl(baseUrl?: string): string;
    sendAsCustomUrlParam(apiKey: string, baseUrl?: string): Promise<TRes>;
    _send(apiKey: string, baseUrl?: string): Promise<TRes>;
}
