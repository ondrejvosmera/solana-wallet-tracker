import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface CurrentLpEmissions {
    /**
     * Unix epoch time (in seconds) of a block as calculated from validator votes.
     *     If you want to look at historical data, let's say 7 days in the past.
     *     1. _Change the **operator** to <_
     *     2. Get the **current epochtime** i.e, 1673831466 -> Jan 15, 2023
     *     3. Subtract the current epochtime from **( 86400 * 7 )**. Place the result of 1673831466 - ( 86400
     * * 7 ) = **1673226666** in the value input - this returns the epochtime time from 7 days ago
     */
    blockTime: number;
    /**
     * Numeric identifier of a block describing the slot that the block was produced in
     */
    blockId: number;
    /**
     * Transaction ID of the the transaction where the reward config was set
     */
    transactionId: string;
    /**
     * Public key of address holding information about the pool.
     *     > You can also visit https://www.hellomoon.io/id?search=lp to search for a liquidity pool or provider
     * using a user interface.
     * `optional field`
     */
    poolAddress: string;
    /**
     * The spl mint of the reward being emitted by the lp
     * `optional field`
     */
    mint: string;
    /**
     * The amount of token given per day to liquidity providers of the pool in tokens native units
     */
    emissionsPerDay: number;
    /**
     * The amount of token given per day to liquidity providers of the pool converted for token decimals
     */
    emissionsPerDayConverted: number;
    /**
     * Name of token per the Metaplex standard
     * `optional field`
     */
    mintName: string;
    /**
     * Public Key of tokenaccount rewards are paid out from
     */
    rewardVault: string;
}
export interface CurrentLpEmissionsRequestArgs {
    /**
     * Public key of address holding information about the pool.
     *     > You can also visit https://www.hellomoon.io/id?search=lp to search for a liquidity pool or provider
     * using a user interface.
     * `optional field`
     */
    poolAddress?: string;
    /**
     * The spl mint of the reward being emitted by the lp
     * `optional field`
     */
    mint?: string;
    blockTime?: {
        operator: "=" | "!=" | ">" | "<" | ">=" | "<=";
        /**
     * Unix epoch time (in seconds) of a block as calculated from validator votes.
     *     If you want to look at historical data, let's say 7 days in the past.
     *     1. _Change the **operator** to <_
     *     2. Get the **current epochtime** i.e, 1673831466 -> Jan 15, 2023
     *     3. Subtract the current epochtime from **( 86400 * 7 )**. Place the result of 1673831466 - ( 86400
     * * 7 ) = **1673226666** in the value input - this returns the epochtime time from 7 days ago
     */
        value: number;
    } | number;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class CurrentLpEmissionsRequest extends BaseRequest<CurrentLpEmissionsRequestArgs, PaginatedResponse<CurrentLpEmissions>> {
    readonly body: CurrentLpEmissionsRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/defi/liquidity-pools/emissions";
    constructor(body?: CurrentLpEmissionsRequestArgs);
}
