import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface RainAccountData {
    /**
     * Loan ID
     * `optional field`
     */
    loanId: string;
    /**
     * Loan status
     */
    status: "Liquidated" | "Ongoing" | "Repaid" | "Sold";
    /**
     * The publickey of the account borrowing
     * `optional field`
     */
    borrower: string;
    /**
     * The publickey of the account lending
     * `optional field`
     */
    lender: string;
    /**
     * The publickey of the pool being used in the loan
     */
    pool: string;
    /**
     * The nft mint of the loan
     */
    mint: string;
    /**
     * The currency of the loan
     */
    currency: string;
    /**
     * Whether the loan is custom
     */
    isCustom: boolean;
    /**
     * Whether the loan is frozen
     */
    isFrozen: boolean;
    /**
     * The price of the loan if on sale
     */
    price: number;
    /**
     * The interest of the loan
     */
    interest: number;
    /**
     * The amount of the loan in lamports
     */
    amount: number;
    /**
     * The duration of the loan in days
     */
    duration: number;
    /**
     * The rain collection identifier of the loan
     */
    collection: number;
    /**
     * The liquidation percentage of the loan
     */
    liquidation: number;
    /**
     * The marketplace of the loan if being sold
     */
    marketplace: string;
    /**
     * Whether the loan is for sale
     */
    saleisForSale: boolean;
    /**
     * The sale price of the loan
     */
    saleSalePrice: number;
    /**
     * The sale currency of the loan
     */
    saleCurrency: string;
    /**
     * The timestamp of when the loan was created
     */
    createdAt: number;
    /**
     * The timestamp of when the loan will expire
     */
    expiredAt: number;
    /**
     * The timestamp of when the loan was repaid
     */
    repaidAt: number;
    /**
     * The timestamp of when the loan was sold
     */
    soldAt: number;
    /**
     * The timestamp of when the loan was liquidated
     */
    liquidatedAt: number;
    /**
     * The base interest of the pool
     */
    baseInterest: number;
    /**
     * The interest rate of the pool
     */
    interestRate: number;
    /**
     * The curve rate of the pool
     */
    curveRate: number;
    /**
     * The curve rate day of the pool
     */
    curveRateDay: number;
    /**
     * The max duration of the pool
     */
    maxDuration: number;
    /**
     * The max amount of the pool
     */
    maxAmount: number;
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionId: string;
}
export interface RainAccountDataRequestArgs {
    /**
     * Loan ID
     * `optional field`
     */
    loanId?: string;
    status?: "Liquidated" | "Ongoing" | "Repaid" | "Sold" | Array<"Liquidated" | "Ongoing" | "Repaid" | "Sold">;
    /**
     * The publickey of the account borrowing
     * `optional field`
     */
    borrower?: string;
    /**
     * The publickey of the account lending
     * `optional field`
     */
    lender?: string;
    collection?: {
        operator: "=" | "!=" | ">" | "<" | ">=" | "<=";
        /**
     * The rain collection identifier of the loan
     */
        value: number;
    } | number;
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionId?: string;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class RainAccountDataRequest extends BaseRequest<RainAccountDataRequestArgs, PaginatedResponse<RainAccountData>> {
    readonly body: RainAccountDataRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/rain/account-data";
    constructor(body?: RainAccountDataRequestArgs);
}
