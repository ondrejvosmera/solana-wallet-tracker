import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface HelloMoonOogy {
}
export interface HelloMoonOogyRequestArgs {
    /**
     * > **Claimed**: A certain entity has completed the reveal process and received the NFT in their wallet.
     *       > **Unclaimed**: When an NFT is unclaimed, it means that it is still in the Oogy wallet, awaiting
     * the process of being revealed and claimed.
     */
    reveal_status?: "claimed" | "unclaimed";
    /**
     * Rank based off a in-house proprietary rating. The lower the number, the rarer the Oogy.
     * `optional field`
     */
    nft_rank?: {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * Mint address of nft per the spl token program. Each NFT has a unique mint address within the collection.
     * `optional field`
     */
    mint?: string;
    /**
     * Is the Oogy listed on a marketplace?
     * `optional field`
     */
    islisted?: boolean;
    /**
     * Unique identifier for each Oogy
     */
    oogy_id?: number;
    /**
     * The background value name of the Oogy.
     * `optional field`
     */
    background_rarity_value?: string[];
    /**
     * The fur value name of the Oogy.
     * `optional field`
     */
    fur_rarity_value?: string[];
    /**
     * The cloth value name of the Oogy.
     * `optional field`
     */
    clothes_rarity_value?: string[];
    /**
     * The eye value name of the Oogy.
     * `optional field`
     */
    eyes_rarity_value?: string[];
    /**
     * The heads value name of the Oogy.
     * `optional field`
     */
    head_rarity_value?: string[];
    /**
     * The speciality value name of the Oogy.
     * `optional field`
     */
    special_rarity_value?: string[];
    /**
     * The one of ones value name of the Oogy.
     * `optional field`
     */
    one_of_one_rarity_value?: string[];
    /**
     * The mouths value name of the Oogy.
     * `optional field`
     */
    mouth_rarity_value?: string[];
    orderby?: {
        nft_rank: "asc" | "desc";
    } | {
        oogy_id: "asc" | "desc";
    };
    /**
     * To start the pagination, just input the limit (the number of results to return)
     *         the offset, is defaulted to 0.
     *         > "pagination": {
     *         >    "limit": 20
     *         > }
     *         In the response you will receive a pagination object with the following properties:
     *         > "pagination": {
     *         >    "limit": 20,
     *         >    "offset": 20
     *         > }
     *         You can use the pagination object response as the params for the next request, which
     *         returns results 21-40 of the next page.
     *
     */
    pagination?: {
        /**
     * The number of results to return. Default is 20.
     */
        limit: number;
        /**
     * The number of results to skip. Default is 0.
     */
        offset: number;
    };
}
export declare class HelloMoonOogyRequest extends BaseRequest<HelloMoonOogyRequestArgs, PaginatedResponse<HelloMoonOogy>> {
    readonly body: HelloMoonOogyRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/hello-moon/oogy";
    constructor(body?: HelloMoonOogyRequestArgs);
}
