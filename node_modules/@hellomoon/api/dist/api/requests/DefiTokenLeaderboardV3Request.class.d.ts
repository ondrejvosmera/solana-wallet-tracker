import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface DefiTokenLeaderboardV3 {
    /**
     * Mint address per the SPL token program.
     *       > You can also visit https://www.hellomoon.io/id?search=token to search for mints using a user
     * interface.
     */
    mint: string;
    /**
     * Name of token per the Metaplex standard
     * `optional field`
     */
    name: string;
    /**
     * Symbol of token per the Metaplex's token metadata standard
     * `optional field`
     */
    symbol: string;
    /**
     * Number of decimals an SPL token's balance is measured in. For example USDC measures to 6 decimals so
     * 1 USDC is measured as 1000000
     */
    decimals: number;
    /**
     * Unique number of holders for the token currently
     */
    totalHolders: number;
    /**
     * The aggreations of number of programs over 1 day
     */
    programCount1d: number;
    /**
     * The latest price of the token
     */
    latest_price: number;
    granularity: Array<"THIRTY_MIN" | "ONE_HOUR" | "SIX_HOUR" | "HALF_DAY" | "ONE_DAY" | "ONE_WEEK" | "ONE_MONTH"> | "THIRTY_MIN" | "ONE_HOUR" | "SIX_HOUR" | "HALF_DAY" | "ONE_DAY" | "ONE_WEEK" | "ONE_MONTH";
    /**
     * The amount the token price has changed over the given granularity
     * `optional field`
     */
    priceChange: number;
    /**
     * The amount of inflow if by smart minters over the given granularity if available
     */
    smartMoneyNetInflow: number;
    /**
     * The amount of inflow if by social accounts over the given granularity if available
     */
    socialNetInflow: number;
    /**
     * The number of active users over the given granularity if available
     * `optional field`
     */
    activeUsers: number;
    /**
     * The number of new users over the given granularity if available
     * `optional field`
     */
    newUsers: number;
    /**
     * The number of buyers over the given granularity if available
     */
    buyers: number;
    /**
     * The number of sellers over the given granularity if available
     */
    sellers: number;
    /**
     * The volume of a candlestick is the total number of coins or tokens traded during the period.
     *     It is usually represented by the size of the candlestick body, with larger bodies indicating higher
     * volumes.
     *     Volume is an important indicator of market activity and can be used to confirm price movements and
     * identify potential reversal points.
     * `optional field`
     */
    volume: number;
    /**
     * The change in volume over the given granularity if available
     */
    volumeChange: number;
}
export interface DefiTokenLeaderboardV3RequestArgs {
    /**
     * Mint address per the SPL token program.
     *       > You can also visit https://www.hellomoon.io/id?search=token to search for mints using a user
     * interface.
     */
    mint?: string;
    granularity?: Array<"THIRTY_MIN" | "ONE_HOUR" | "SIX_HOUR" | "HALF_DAY" | "ONE_DAY" | "ONE_WEEK" | "ONE_MONTH"> | "THIRTY_MIN" | "ONE_HOUR" | "SIX_HOUR" | "HALF_DAY" | "ONE_DAY" | "ONE_WEEK" | "ONE_MONTH";
    /**
     * The number of new users over the given granularity if available
     * `optional field`
     */
    newUsers?: number;
    /**
     * The number of active users over the given granularity if available
     * `optional field`
     */
    activeUsers?: number;
    /**
     * The volume of a candlestick is the total number of coins or tokens traded during the period.
     *     It is usually represented by the size of the candlestick body, with larger bodies indicating higher
     * volumes.
     *     Volume is an important indicator of market activity and can be used to confirm price movements and
     * identify potential reversal points.
     * `optional field`
     */
    volume?: number;
    /**
     * The amount the token price has changed over the given granularity
     * `optional field`
     */
    priceChange?: number;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class DefiTokenLeaderboardV3Request extends BaseRequest<DefiTokenLeaderboardV3RequestArgs, PaginatedResponse<DefiTokenLeaderboardV3>> {
    readonly body: DefiTokenLeaderboardV3RequestArgs;
    readonly method = "POST";
    readonly url = "/v0/token/stats";
    constructor(body?: DefiTokenLeaderboardV3RequestArgs);
}
