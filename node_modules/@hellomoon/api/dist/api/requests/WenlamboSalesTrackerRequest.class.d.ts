import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface WenlamboSalesTracker {
}
export interface WenlamboSalesTrackerRequestArgs {
    transactionType?: "SALE" | "ASK" | "UPDATE_ASK" | "CANCEL_BID" | "BID" | "CANCEL_ASK" | "FREEZE";
    blockId?: {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * To start the pagination, just input the limit (the number of results to return)
     *         the offset, is defaulted to 0.
     *         > "pagination": {
     *         >    "limit": 20
     *         > }
     *         In the response you will receive a pagination object with the following properties:
     *         > "pagination": {
     *         >    "limit": 20,
     *         >    "offset": 20
     *         > }
     *         You can use the pagination object response as the params for the next request, which
     *         returns results 21-40 of the next page.
     *
     */
    pagination?: {
        /**
     * The number of results to return. Default is 20.
     */
        limit: number;
        /**
     * The number of results to skip. Default is 0.
     */
        offset: number;
    };
}
export declare class WenlamboSalesTrackerRequest extends BaseRequest<WenlamboSalesTrackerRequestArgs, PaginatedResponse<WenlamboSalesTracker>> {
    readonly body: WenlamboSalesTrackerRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/wenlambo/sales-tracker";
    constructor(body?: WenlamboSalesTrackerRequestArgs);
}
