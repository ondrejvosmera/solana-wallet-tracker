import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface BountyLog {
}
export interface BountyLogRequestArgs {
    /**
     * To start the pagination, just input the limit (the number of results to return)
     *         the offset, is defaulted to 0.
     *         > "pagination": {
     *         >    "limit": 20
     *         > }
     *         In the response you will receive a pagination object with the following properties:
     *         > "pagination": {
     *         >    "limit": 20,
     *         >    "offset": 20
     *         > }
     *         You can use the pagination object response as the params for the next request, which
     *         returns results 21-40 of the next page.
     *
     */
    pagination?: {
        /**
     * The number of results to return. Default is 20.
     */
        limit: number;
        /**
     * The number of results to skip. Default is 0.
     */
        offset: number;
    };
    orderby?: {
        score: "asc" | "desc";
    } | {
        startTime: "asc" | "desc";
    };
}
export declare class BountyLogRequest extends BaseRequest<BountyLogRequestArgs, PaginatedResponse<BountyLog>> {
    readonly body: BountyLogRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/wenlambo/math_whizz/bounty/log";
    constructor(body?: BountyLogRequestArgs);
}
