"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseRequest_class_1 = require("../BaseRequest.class");
interface;
{
    dropId;
}
Entries;
{
    rows: object[];
    pagination: {
        limit: number;
        offset: number;
    }
    ;
}
interface;
{
    dropId;
}
EntriesRequestArgs;
{
    /**
     * The total amount of spice that has been sacrificed
     */
    spiceSacrificed ?  : number;
    /**
     * The total amount of ooze that has been sacrificed
     */
    oozeSacrificed ?  : number;
    /**
     * Rank based off a in-house proprietary rating. The lower the number, the rarer the Oogy.
     * `optional field`
     */
    nftRank ?  : number;
    /**
     * Mint address of nft per the spl token program. Each NFT has a unique mint address within the collection.
     * `optional field`
     */
    mint ?  : string;
    /**
     * Unique identifier for each Oogy
     */
    oogyId ?  : number;
    /**
     * Filter by only a user's wallet
     */
    walletId ?  : string;
    orderby ?  :
        {
            nftRank: "asc" | "desc"
        } |
            {
                oogyId: "asc" | "desc"
            } |
            {
                positionByOdds: "asc" | "desc"
            } |
            {
                oozeSacrificed: "asc" | "desc"
            } |
            {
                spiceSacrificed: "asc" | "desc"
            };
    /**
     * To start the pagination, just input the limit (the number of results to return)
     *         the offset, is defaulted to 0.
     *         > "pagination": {
     *         >    "limit": 20
     *         > }
     *         In the response you will receive a pagination object with the following properties:
     *         > "pagination": {
     *         >    "limit": 20,
     *         >    "offset": 20
     *         > }
     *         You can use the pagination object response as the params for the next request, which
     *         returns results 21-40 of the next page.
     *
     */
    pagination ?  : {
        /**
     * The number of results to return. Default is 20.
     */
        limit: number,
        /**
     * The number of results to skip. Default is 0.
     */
        offset: number
    };
}
class default_1 {
    dropId;
}
exports.default_1 = default_1;
EntriesRequest;
BaseRequest_class_1.BaseRequest < { dropId };
EntriesRequestArgs, Response_interface_1.PaginatedResponse < { dropId };
Entries >> {
    method = "POST",
    url = "/v0/hello-moon/oogy/drop/{dropId}/entries",
    constructor(body, EntriesRequestArgs = {}) {
        super(body);
    }
};
