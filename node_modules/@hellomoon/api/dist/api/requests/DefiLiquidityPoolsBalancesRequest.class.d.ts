import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface DefiLiquidityPoolsBalances {
    /**
     * The public key (address) of the account containing the program on chain.
     *       > You can also visit https://www.hellomoon.io/id?search=program to search for a program using a
     * user interface.
     */
    program: string;
    /**
     * Public key of address holding information about the pool.
     *     > You can also visit https://www.hellomoon.io/id?search=lp to search for a liquidity pool or provider
     * using a user interface.
     * `optional field`
     */
    poolAddress: string;
    /**
     * Name of the pool in the format {Symbol A} - {Symbol B}
     * `optional field`
     */
    poolName: string;
    /**
     * Mint address of the first token in the LP pair per the SPL token program
     * `optional field`
     */
    mintTokenA: string;
    /**
     * Name of the first token in the LP pair per our spl_token_list metadata
     */
    nameTokenA: string;
    /**
     * Mint address of the second token in the LP pair per the SPL token program
     * `optional field`
     */
    mintTokenB: string;
    /**
     * Name of the second token in the LP pair per our spl_token_list metadata
     */
    nameTokenB: string;
    /**
     * Mint address of the first token in the LP pair per the SPL token program
     * `optional field`
     */
    tokenAccountA: string;
    /**
     * Mint address of the first token in the LP pair per the SPL token program
     * `optional field`
     */
    tokenAccountB: string;
    /**
     * Balance of token A in the tokens native units (unconverted for decimals)
     */
    balance_token_a_lamports: number;
    /**
     * Balance of token B in the tokens native units (unconverted for decimals)
     */
    balance_token_b_lamports: number;
    /**
     * Balance of token A in the tokens converted for decimals
     */
    balance_token_a: number;
    /**
     * Balance of token B in the tokens converted for decimals
     */
    balance_token_b: number;
}
export interface DefiLiquidityPoolsBalancesRequestArgs {
    /**
     * Public key of address holding information about the pool.
     *     > You can also visit https://www.hellomoon.io/id?search=lp to search for a liquidity pool or provider
     * using a user interface.
     * `optional field`
     */
    poolAddress?: string;
    /**
     * The public key (address) of the account containing the program on chain.
     *       > You can also visit https://www.hellomoon.io/id?search=program to search for a program using a
     * user interface.
     */
    program?: string;
    /**
     * Name of the pool in the format {Symbol A} - {Symbol B}
     * `optional field`
     */
    poolName?: string;
    /**
     * Mint address of the first token in the LP pair per the SPL token program
     * `optional field`
     */
    mintTokenA?: string;
    /**
     * Mint address of the second token in the LP pair per the SPL token program
     * `optional field`
     */
    mintTokenB?: string;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class DefiLiquidityPoolsBalancesRequest extends BaseRequest<DefiLiquidityPoolsBalancesRequestArgs, PaginatedResponse<DefiLiquidityPoolsBalances>> {
    readonly body: DefiLiquidityPoolsBalancesRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/defi/liquidity-pools/balances";
    constructor(body?: DefiLiquidityPoolsBalancesRequestArgs);
}
