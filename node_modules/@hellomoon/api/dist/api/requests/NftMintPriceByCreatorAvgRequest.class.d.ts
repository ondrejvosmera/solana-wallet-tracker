import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface NftMintPriceByCreatorAvg {
    /**
     * Mint address of nft per the spl token program. Each NFT has a unique mint address within the collection.
     * `optional field`
     */
    nftMint: string;
    /**
     * The public key of the address that has signed the nft metadata as a creator
     */
    creatorAddress: string;
    /**
     * Number of sales of the NFT creator's NFTs looking back 30 days
     */
    num_sales: number;
    /**
     * Average price of the NFT creator's NFTs looking back 30 days (in USD)
     */
    avg_usd_price: number;
}
export interface NftMintPriceByCreatorAvgRequestArgs {
    /**
     * Mint address of nft per the spl token program. Each NFT has a unique mint address within the collection.
     * `optional field`
     */
    nftMint?: string;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class NftMintPriceByCreatorAvgRequest extends BaseRequest<NftMintPriceByCreatorAvgRequestArgs, PaginatedResponse<NftMintPriceByCreatorAvg>> {
    readonly body: NftMintPriceByCreatorAvgRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/nft/estimated-price";
    constructor(body?: NftMintPriceByCreatorAvgRequestArgs);
}
