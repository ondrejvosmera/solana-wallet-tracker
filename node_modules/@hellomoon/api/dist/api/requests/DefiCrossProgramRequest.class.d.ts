import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface DefiCrossProgram {
    /**
     * The parent program id of the instruciton being called
     * `optional field`
     */
    parentProgramId: string;
    /**
     * The child program id of the instruction being called. ie. the program being called in a sub-instruction
     * `optional field`
     */
    childProgramId: string;
    /**
     * The number of times the child program was called by the parent program
     */
    cnt: number;
}
export interface DefiCrossProgramRequestArgs {
    /**
     * The parent program id of the instruciton being called
     * `optional field`
     */
    parentProgramId?: string;
    /**
     * The child program id of the instruction being called. ie. the program being called in a sub-instruction
     * `optional field`
     */
    childProgramId?: string;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class DefiCrossProgramRequest extends BaseRequest<DefiCrossProgramRequestArgs, PaginatedResponse<DefiCrossProgram>> {
    readonly body: DefiCrossProgramRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/solana/cpi";
    constructor(body?: DefiCrossProgramRequestArgs);
}
