import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface NftDiamondHandsWallets {
    /**
     * Wallet address
     * `optional field`
     */
    walletAddress: string;
    /**
     * Number of NFTs bought
     */
    countNFTsBought: number;
    /**
     * Number of NFTs sold
     */
    countNFTsSold: number;
    /**
     * Diamond hand metric
     */
    diamondHandMetric: number;
}
export interface NftDiamondHandsWalletsRequestArgs {
    /**
     * Wallet address
     * `optional field`
     */
    walletAddress?: string;
    diamondHandMetric?: {
        operator: "=" | "!=" | ">" | "<" | ">=" | "<=";
        /**
     * Diamond hand metric
     */
        value: number;
    } | number;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class NftDiamondHandsWalletsRequest extends BaseRequest<NftDiamondHandsWalletsRequestArgs, PaginatedResponse<NftDiamondHandsWallets>> {
    readonly body: NftDiamondHandsWalletsRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/nft/diamond-hands";
    constructor(body?: NftDiamondHandsWalletsRequestArgs);
}
