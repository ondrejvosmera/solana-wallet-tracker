import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface CollectionName {
    /**
     * The name of the collection
     * `optional field`
     */
    collectionName: string;
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionId: string;
    /**
     * Current volume of the collection in Lamports going back 24 hours
     */
    currentVolumeSOL: string;
}
export interface CollectionNameRequestArgs {
    /**
     * The name of the collection
     */
    collectionName?: string;
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     */
    helloMoonCollectionId?: string;
    /**
     * The strategy to use when searching by name. `levenshtein` measures by similarity to your search string.
     * `phonetic` measures similarity by how your search string sounds. `default` searches and orders by volume.
     */
    searchStrategy?: "phonetic" | "levenshtein" | "default";
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class CollectionNameRequest extends BaseRequest<CollectionNameRequestArgs, PaginatedResponse<CollectionName>> {
    readonly body: CollectionNameRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/nft/collection/name";
    constructor(body?: CollectionNameRequestArgs);
}
