import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface LatestMint {
    helloMoonCollectionId: string | string[];
    /**
     * Unix epoch time (in seconds) of a block as calculated from validator votes.
     *         If you want to look at historical data, let's say 7 days in the past.
     *         1. _Change the **operator** to <_
     *         2. Get the **current epochtime** i.e, 1673831466 -> Jan 15, 2023
     *         3. Subtract the current epochtime from **( 86400 * 7 )**. Place the result of 1673831466 - (
     * 86400 * 7 ) = **1673226666** in the value input - this returns the epochtime time from 7 days ago
     * `optional field`
     */
    blockTime: number | {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * First signature in a transaction, which can be used to track and verify the transaction status across
     * the complete ledger.
     *         It is a base-58 encoded string that is uniquely generated for each transaction.
     * `optional field`
     */
    transactionId: string;
    /**
     * The market the NFT mint was sold on.
     * `optional field`
     */
    market: string;
    /**
     * The price of the NFT mint was sold for.
     */
    price: number;
    /**
     * Mint address per the SPL token program.
     *       > You can also visit https://www.hellomoon.io/id?search=token to search for mints using a user
     * interface.
     */
    mint: string;
    /**
     * The buyer of the NFT mint.
     * `optional field`
     */
    buyer: string;
    /**
     * The seller of the NFT mint.
     * `optional field`
     */
    seller: string;
    /**
     * Numeric identifier of a block describing the slot that the block was produced in
     */
    blockId: number;
}
export interface LatestMintRequestArgs {
    /**
     * Mint address per the SPL token program.
     *       > You can also visit https://www.hellomoon.io/id?search=token to search for mints using a user
     * interface.
     */
    mint?: string;
    /**
     * The market the NFT mint was sold on.
     * `optional field`
     */
    market?: string;
    /**
     * The buyer of the NFT mint.
     * `optional field`
     */
    buyer?: string;
    /**
     * The seller of the NFT mint.
     * `optional field`
     */
    seller?: string;
    price?: {
        operator: "=" | "!=" | ">" | "<" | ">=" | "<=";
        /**
     * The price of the NFT mint was sold for.
     */
        value: number;
    } | number;
    helloMoonCollectionId?: string | string[];
    /**
     * Unix epoch time (in seconds) of a block as calculated from validator votes.
     *         If you want to look at historical data, let's say 7 days in the past.
     *         1. _Change the **operator** to <_
     *         2. Get the **current epochtime** i.e, 1673831466 -> Jan 15, 2023
     *         3. Subtract the current epochtime from **( 86400 * 7 )**. Place the result of 1673831466 - (
     * 86400 * 7 ) = **1673226666** in the value input - this returns the epochtime time from 7 days ago
     * `optional field`
     */
    blockTime?: number | {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class LatestMintRequest extends BaseRequest<LatestMintRequestArgs, PaginatedResponse<LatestMint>> {
    readonly body: LatestMintRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/nft/sales/secondary/latest/mint";
    constructor(body?: LatestMintRequestArgs);
}
