import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface ApiKeysCreate {
    /**
     * The owner of this key
     */
    userId: string;
    /**
     * The api key
     */
    apiKey: string;
    /**
     * The human readable name given to the key
     */
    name: string;
    /**
     * The last date this key was used
     */
    lastUsedDate: string;
    /**
     * The date this key was created
     */
    createdDate: string;
    /**
     * The overage setting for the key
     */
    overagePreference: "Plan" | "Unlimited" | "UserDefined";
    /**
     * The limit for overage if the overagePreference is set to UserDefined
     */
    userDefinedOverageLimit: number;
    /**
     * The pricing tier associated with this key
     */
    tier: "Free" | "Developer" | "Business" | "Enterprise";
    /**
     * The current state of this key
     */
    status: "Active" | "UsageExceeded" | "Blocked";
}
export interface ApiKeysCreateRequestArgs {
    /**
     * A human readable name to label the key
     */
    name?: string;
    /**
     * A unique identifier for the key
     */
    key?: string;
}
export declare class ApiKeysCreateRequest extends BaseRequest<ApiKeysCreateRequestArgs, PaginatedResponse<ApiKeysCreate>> {
    readonly body: ApiKeysCreateRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/hello-moon/api-keys/create";
    constructor(body?: ApiKeysCreateRequestArgs);
}
