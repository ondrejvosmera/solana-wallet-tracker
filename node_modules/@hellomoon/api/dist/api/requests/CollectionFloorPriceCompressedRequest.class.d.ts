import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface CollectionFloorPriceCompressed {
    /**
     * The group value of the account data. This is the mint of the token.
     * `optional field`
     */
    groupValue: string;
    /**
     * The floor price of the group value in SOL.
     */
    floorPrice: number;
}
export interface CollectionFloorPriceCompressedRequestArgs {
    /**
     * The group value of the account data. This is the mint of the token.
     * `optional field`
     */
    groupValue?: string;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class CollectionFloorPriceCompressedRequest extends BaseRequest<CollectionFloorPriceCompressedRequestArgs, PaginatedResponse<CollectionFloorPriceCompressed>> {
    readonly body: CollectionFloorPriceCompressedRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/nft/collection/floor-price-compressed";
    constructor(body?: CollectionFloorPriceCompressedRequestArgs);
}
