import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface SplTokenList {
    /**
     * Token program id
     */
    id: string;
    mint: string | string[];
    /**
     * Name of token per the Metaplex standard
     * `optional field`
     */
    name: string;
    /**
     * Symbol of token per the Metaplex's token metadata standard
     * `optional field`
     */
    symbol: string;
    /**
     * Number of decimals
     */
    decimals: number;
    /**
     * The slug of the token
     */
    slug: string;
    /**
     * The Coin Gecko Id
     */
    coingeckoId: string;
    /**
     * The number of swaps over the lif of the token
     */
    lifetimeSwapCount: number;
}
export interface SplTokenListRequestArgs {
    mint?: string | string[];
    /**
     * Symbol of token per the Metaplex's token metadata standard
     * `optional field`
     */
    symbol?: string;
    /**
     * Name of token per the Metaplex standard
     * `optional field`
     */
    name?: string;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class SplTokenListRequest extends BaseRequest<SplTokenListRequestArgs, PaginatedResponse<SplTokenList>> {
    readonly body: SplTokenListRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/token/list";
    constructor(body?: SplTokenListRequestArgs);
}
