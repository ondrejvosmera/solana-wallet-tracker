import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface CollectionStats {
    /**
     * The name of the collection
     * `optional field`
     */
    collectionName: string;
    /**
     * The floor price of the collection in Lamports
     */
    floorPriceLamports: string;
    granularity: Array<"ONE_MIN" | "FIVE_MIN" | "ONE_HOUR" | "ONE_DAY" | "ONE_WEEK"> | "ONE_MIN" | "FIVE_MIN" | "ONE_HOUR" | "ONE_DAY" | "ONE_WEEK";
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionId: string;
    /**
     * Epoch time in seconds. You can adjust the startTime to look at Historical Stats and Floor Prices.
     *     For example, startTime < 1622576000 (June 1, 2021) will return NFT Collection Stats before 1622576000.
     *
     * If you want to look at historical data, let's say 7 days in the past.
     * > 1. _Change the **operator** to <_
     * > 2. Get the **current epochtime** i.e, 1673831466 -> Jan 15, 2023
     * > 3. Subtract the current epochtime from **( 86400 * 7 )**. Place the result of 1673831466 - ( 86400
     * * 7 ) = **1673226666** in the value input - this returns the **startTime** time from 7 days ago
     */
    startTime: number;
    /**
     * The high price of a candlestick is the highest price reached during the time period.
     */
    high: number;
    /**
     * The low price of a candlestick is the lowest price reached during the time period.
     */
    low: number;
    /**
     * The opening price of a candlestick is the price at which the period opened.
     *     It is usually represented by the top of the candlestick body, and is the starting point for the period's
     * price action.
     */
    open: number;
    /**
     * The closing price of a candlestick is the price at which the period closed.
     *     It is usually represented by the bottom of the candlestick body, and is the ending point for the
     * period's price action.
     */
    close: number;
    /**
     * The volume of a candlestick is the total number of coins or tokens traded during the period.
     *     It is usually represented by the size of the candlestick body, with larger bodies indicating higher
     * volumes.
     *     Volume is an important indicator of market activity and can be used to confirm price movements and
     * identify potential reversal points.
     * `optional field`
     */
    volume: number;
    /**
     * The slug of the NFT collection
     */
    slug: string;
    /**
     * Total supply of the NFT collection
     */
    supply: number;
    /**
     * Total number of unique owners of the NFT collection currently
     */
    currentOwnerCount: number;
    /**
     * The market cap of the NFT collection in Solana
     */
    marketCapSol: number;
    /**
     * Hello Moon's average washtrading score of the NFT collection
     */
    averageWashScore: number;
    /**
     * Total number of listed NFTs in the NFT collection
     */
    listingCount: number;
    /**
     * The most common mint price of the NFT collection.
     *        For instance if WL was 100 people minting at 0.1 and open minting was 500 people minting at 0.2,
     * then the mode would be 0.2
     */
    mintPriceMode: number;
    /**
     * A description of the NFT collection
     */
    narrative: string;
    /**
     * proportion of the NFT collection held by Magic Eden
     */
    magic_eden_holding_proportion: number;
    /**
     * A sample image of the NFT collection
     */
    sample_image: string;
    /**
     * The external url of the NFT collection
     */
    external_url: string;
    /**
     * The average holdings of the NFT collection owners in USD
     */
    owners_avg_usdc_holdings: number;
    /**
     * The proportion of the NFT collection owned by Solana Monkey Business
     */
    proportion_owning_solana_monkey_business: number;
    /**
     * The average price of the NFT collection in SOL
     */
    avg_price_sol: number;
    /**
     * The average price of the NFT collection in USD
     */
    avg_price_usd: number;
    /**
     * The price of SOL in USD
     */
    sol_price_usd: number;
    /**
     * The time at which the price of SOL in USD was last updated
     */
    sol_price_usd_last_updated: string;
    /**
     * The number of NFT collection held by Magic Eden
     */
    magic_eden_holding: number;
    /**
     * The market cap of the NFT collection in USD
     */
    market_cap_usd: number;
    /**
     * The average price of the NFT collection in the last 30 minutes
     */
    avg_price_now_30_minutes: number;
    /**
     * The smart money inflow of the NFT collection in the last 30 minutes
     */
    smart_inflow_30_minutes: number;
    /**
     * The smart money netflow score of the NFT collection in the last 30 minutes
     */
    smart_money_netflow_score_30_minutes: number;
    /**
     * The number of buyers of the NFT collection in the last 30 minutes
     */
    cnt_buyers_30min: number;
    /**
     * The number of sellers of the NFT collection in the last 30 minutes
     */
    cnt_sellers_30min: number;
    /**
     * The average price of the NFT collection in the last 1 hour
     */
    avg_price_now_1_hour: number;
    /**
     * The smart money inflow of the NFT collection in the last 1 hour
     */
    smart_inflow_1_hour: number;
    /**
     * The smart money netflow score of the NFT collection in the last 1 hour
     */
    smart_money_netflow_score_1_hour: number;
    /**
     * The number of buyers of the NFT collection in the last 1 hour
     */
    cnt_buyers_1h: number;
    /**
     * The number of sellers of the NFT collection in the last 1 hour
     */
    cnt_sellers_1h: number;
    /**
     * The average price of the NFT collection in the last 6 hours
     */
    avg_price_now_6_hour: number;
    /**
     * The smart money inflow of the NFT collection in the last 6 hours
     */
    smart_inflow_6_hour: number;
    /**
     * The smart money netflow score of the NFT collection in the last 6 hours
     */
    smart_money_netflow_score_6_hour: number;
    /**
     * The number of buyers of the NFT collection in the last 6 hours
     */
    cnt_buyers_6h: number;
    /**
     * The number of sellers of the NFT collection in the last 6 hours
     */
    cnt_sellers_6h: number;
    /**
     * The average price of the NFT collection in the last 12 hours
     */
    avg_price_now_12_hour: number;
    /**
     * The smart money inflow of the NFT collection in the last 12 hours
     */
    smart_inflow_12_hour: number;
    /**
     * The smart money netflow score of the NFT collection in the last 12 hours
     */
    smart_money_netflow_score_12_hour: number;
    /**
     * The number of buyers of the NFT collection in the last 12 hours
     */
    cnt_buyers_12h: number;
    /**
     * The number of sellers of the NFT collection in the last 12 hours
     */
    cnt_sellers_12h: number;
    /**
     * The number of buyers of the NFT collection in the last 1 day
     */
    cnt_buyers_1d: number;
    /**
     * The number of sellers of the NFT collection in the last 1 day
     */
    cnt_sellers_1d: number;
    /**
     * The number of buyers of the NFT collection in the last 7 days
     */
    cnt_buyers_7d: number;
    /**
     * The number of sellers of the NFT collection in the last 7 days
     */
    cnt_sellers_7d: number;
    /**
     * The smart money inflow of the NFT collection in the last 1 month
     */
    smart_inflow_1_month: number;
    /**
     * The smart money netflow score of the NFT collection in the last 1 month
     */
    smart_money_netflow_score_1_month: number;
    /**
     * The average price of the NFT collection in the last 1 month
     */
    avg_price_now_1_month: number;
    /**
     * The number of buyers of the NFT collection in the last 28 days
     */
    cnt_buyers_28d: number;
    /**
     * The number of sellers of the NFT collection in the last 28 days
     */
    cnt_sellers_28d: number;
}
export interface CollectionStatsRequestArgs {
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionId?: string;
    /**
     * The name of the collection
     * `optional field`
     */
    collectionName?: string;
    granularity?: Array<"ONE_MIN" | "FIVE_MIN" | "ONE_HOUR" | "ONE_DAY" | "ONE_WEEK"> | "ONE_MIN" | "FIVE_MIN" | "ONE_HOUR" | "ONE_DAY" | "ONE_WEEK";
    startTime?: {
        operator: "=" | "!=" | ">" | "<" | ">=" | "<=";
        /**
     * Epoch time in seconds. You can adjust the startTime to look at Historical Stats and Floor Prices.
     *     For example, startTime < 1622576000 (June 1, 2021) will return NFT Collection Stats before 1622576000.
     *
     * If you want to look at historical data, let's say 7 days in the past.
     * > 1. _Change the **operator** to <_
     * > 2. Get the **current epochtime** i.e, 1673831466 -> Jan 15, 2023
     * > 3. Subtract the current epochtime from **( 86400 * 7 )**. Place the result of 1673831466 - ( 86400
     * * 7 ) = **1673226666** in the value input - this returns the **startTime** time from 7 days ago
     */
        value: number;
    } | number;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class CollectionStatsRequest extends BaseRequest<CollectionStatsRequestArgs, PaginatedResponse<CollectionStats>> {
    readonly body: CollectionStatsRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/nft/collection/stats";
    constructor(body?: CollectionStatsRequestArgs);
}
