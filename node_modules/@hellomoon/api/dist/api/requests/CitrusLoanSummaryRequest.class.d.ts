import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface CitrusLoanSummary {
    /**
     * UTC Blocktime of the offer for the loan
     * `optional field`
     */
    offerBlocktime: {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * UTC Blocktime of when the loan was cancelled null if it was never cancelled
     */
    cancelBlocktime: number;
    /**
     * UTC Blocktime of when the loan was accepted null if it was never accepted
     * `optional field`
     */
    acceptBlocktime: {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * UTC Blocktime of when the loan was repaid null if it was never repaid
     */
    repayBlocktime: number;
    /**
     * UTC Blocktime when the loan defaulted
     *           > If the field returned is **null**, it was never defaulted
     */
    defaultBlocktime: number;
    /**
     * Loan address
     * `optional field`
     */
    loanAccount: string;
    /**
     * Address of the pool
     * `optional field`
     */
    collectionConfig: string;
    /**
     * When a loan is repayed and reborrowed, this is the loan address of the renewed loan
     */
    newLoanAccount: string;
    /**
     * Pubkey of the address of the lender
     * `optional field`
     */
    lender: string;
    /**
     * Pubkey of the address of the borrower
     * `optional field`
     */
    borrower: string;
    /**
     * nft mint address of the mint that was used as collateral for the loan
     * `optional field`
     */
    collateralMint: string;
    /**
     * The APY of the loan in bps. A value of 18000 means 180% APY
     */
    apyBps: number;
    /**
     * Duration of the loan in seconds
     */
    loanDurationSeconds: number;
    /**
     * Value of the principal of the loan in SOL
     */
    principalAmount: number;
    /**
     * Amount repayed to the lender in SOL, includes principal and interest
     */
    repayAmount: number;
    /**
     * Fee paid by the borrower
     */
    treasuryAmount: number;
}
export interface CitrusLoanSummaryRequestArgs {
    /**
     * UTC Blocktime of the offer for the loan
     * `optional field`
     */
    offerBlocktime?: {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * Loan address
     * `optional field`
     */
    loanAccount?: string;
    /**
     * Pubkey of the address of the lender
     * `optional field`
     */
    lender?: string;
    /**
     * Pubkey of the address of the borrower
     * `optional field`
     */
    borrower?: string;
    /**
     * nft mint address of the mint that was used as collateral for the loan
     * `optional field`
     */
    collateralMint?: string;
    /**
     * Address of the pool
     * `optional field`
     */
    collectionConfig?: string;
    /**
     * UTC Blocktime of when the loan was accepted null if it was never accepted
     * `optional field`
     */
    acceptBlocktime?: {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class CitrusLoanSummaryRequest extends BaseRequest<CitrusLoanSummaryRequestArgs, PaginatedResponse<CitrusLoanSummary>> {
    readonly body: CitrusLoanSummaryRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/citrus/loan-summary";
    constructor(body?: CitrusLoanSummaryRequestArgs);
}
