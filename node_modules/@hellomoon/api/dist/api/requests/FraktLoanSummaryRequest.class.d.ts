import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface FraktLoanSummary {
    /**
     * The proposeBlocktime references the blocktime that the loan was proposed.
     */
    proposeBlocktime: number;
    /**
     * The approveBlocktime references the blocktime that the loan was approved.
     * `optional field`
     */
    approveBlocktime: {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * The rejectBlocktime references the blocktime that the loan was rejected.
     */
    rejectBlocktime: number;
    /**
     * The paybackBlocktime references the blocktime that the loan was paid back.
     */
    paybackBlocktime: number;
    /**
     * The liquidateBlocktime references the blocktime that the loan was liquidated.
     */
    liquidateBlocktime: number;
    /**
     * The closeBlocktime references the blocktime that the loan was closed.
     */
    closeBlocktime: number;
    /**
     * The loan references the loan address
     * `optional field`
     */
    loan: string;
    /**
     * The borrower references the borrower address of the loan
     * `optional field`
     */
    borrower: string;
    /**
     * Mint address of nft per the spl token program. Each NFT has a unique mint address within the collection.
     * `optional field`
     */
    nftMint: string;
    /**
     * The collectionInfo references the collection info of the loan
     * `optional field`
     */
    collectionInfo: string;
    /**
     * The liquidityPool references the liquidity pool of the loan
     */
    liquidityPool: string;
    /**
     * The isPriceBased references whether the loan is price based or not
     */
    isPriceBased: boolean;
    /**
     * The originalPriceFromBorrower references the original price from the borrower on the loan
     */
    originalPriceFromBorrower: number;
    /**
     * The priceApproved references the price approved for the loan
     */
    priceApproved: number;
    /**
     * The discount references the discount applied to the loan
     */
    discount: number;
    /**
     * The LTV references the LTV ratio of the loan.
     */
    LTV: number;
    /**
     * The adminPayment references the admin payment
     */
    adminPayment: number;
    /**
     * The transferToUser references the transfer to user
     */
    transferToUser: number;
    /**
     * The reimbursedToUser references the reimbursed to user if the loan was rejected
     */
    reimbursedToUser: number;
    /**
     * The paybackToLiqOwner references the payback to liquidation owner
     */
    paybackToLiqOwner: number;
    /**
     * The paybackRoyalty references the payback royalty
     */
    paybackRoyalty: number;
    /**
     * The paybackTotal references the payback total
     */
    paybackTotal: number;
    /**
     * The gracePeriod references the grace period
     */
    gracePeriod: number;
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionId: string;
}
export interface FraktLoanSummaryRequestArgs {
    /**
     * Mint address of nft per the spl token program. Each NFT has a unique mint address within the collection.
     * `optional field`
     */
    nftMint?: string;
    /**
     * The loan references the loan address
     * `optional field`
     */
    loan?: string;
    /**
     * The borrower references the borrower address of the loan
     * `optional field`
     */
    borrower?: string;
    /**
     * The collectionInfo references the collection info of the loan
     * `optional field`
     */
    collectionInfo?: string;
    /**
     * The approveBlocktime references the blocktime that the loan was approved.
     * `optional field`
     */
    approveBlocktime?: {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionId?: string;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class FraktLoanSummaryRequest extends BaseRequest<FraktLoanSummaryRequestArgs, PaginatedResponse<FraktLoanSummary>> {
    readonly body: FraktLoanSummaryRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/frakt/loan-summary";
    constructor(body?: FraktLoanSummaryRequestArgs);
}
