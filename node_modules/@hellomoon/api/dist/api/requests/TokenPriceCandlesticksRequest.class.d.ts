import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface TokenPriceCandlesticks {
    /**
     * Mint address per the SPL token program.
     *       > You can also visit https://www.hellomoon.io/id?search=token to search for mints using a user
     * interface.
     */
    mint: string;
    granularity: Array<"ONE_MIN" | "FIVE_MIN" | "ONE_HOUR" | "ONE_DAY" | "ONE_WEEK"> | "ONE_MIN" | "FIVE_MIN" | "ONE_HOUR" | "ONE_DAY" | "ONE_WEEK";
    /**
     * Numeric identifier of a block describing the slot that the block was produced in
     */
    lastblockid: number;
    /**
     * Epoch time in seconds. You can adjust the startTime to look at Historical Stats and Floor Prices.
     *         For example, startTime < 1622576000 (June 1, 2021) will return NFT Collection Stats before 1622576000.
     *
     *     If you want to look at historical data, let's say 7 days in the past.
     *     > 1. _Change the **operator** to <_
     *     > 2. Get the **current epochtime** i.e, 1673831466 -> Jan 15, 2023
     *     > 3. Subtract the current epochtime from **( 86400 * 7 )**. Place the result of 1673831466 - ( 86400
     * * 7 ) = **1673226666** in the value input - this returns the **startTime** time from 7 days ago
     * `optional field`
     */
    startTime: {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    /**
     * The high price of a candlestick is the highest price reached during the time period.
     */
    high: number;
    /**
     * The low price of a candlestick is the lowest price reached during the time period.
     */
    low: number;
    /**
     * The opening price of a candlestick is the price at which the period opened.
     *     It is usually represented by the top of the candlestick body, and is the starting point for the period's
     * price action.
     */
    open: number;
    /**
     * The closing price of a candlestick is the price at which the period closed.
     *     It is usually represented by the bottom of the candlestick body, and is the ending point for the
     * period's price action.
     */
    close: number;
    /**
     * The volume of a candlestick is the total number of coins or tokens traded during the period.
     *     It is usually represented by the size of the candlestick body, with larger bodies indicating higher
     * volumes.
     *     Volume is an important indicator of market activity and can be used to confirm price movements and
     * identify potential reversal points.
     * `optional field`
     */
    volume: number;
}
export interface TokenPriceCandlesticksRequestArgs {
    /**
     * Mint address per the SPL token program.
     *       > You can also visit https://www.hellomoon.io/id?search=token to search for mints using a user
     * interface.
     */
    mint?: string;
    /**
     * Epoch time in seconds. You can adjust the startTime to look at Historical Stats and Floor Prices.
     *         For example, startTime < 1622576000 (June 1, 2021) will return NFT Collection Stats before 1622576000.
     *
     *     If you want to look at historical data, let's say 7 days in the past.
     *     > 1. _Change the **operator** to <_
     *     > 2. Get the **current epochtime** i.e, 1673831466 -> Jan 15, 2023
     *     > 3. Subtract the current epochtime from **( 86400 * 7 )**. Place the result of 1673831466 - ( 86400
     * * 7 ) = **1673226666** in the value input - this returns the **startTime** time from 7 days ago
     * `optional field`
     */
    startTime?: {
        value: number;
        operator: "=" | "!=" | "<" | "<=" | ">" | ">=";
    } | {
        greaterThan: number;
        lessThan: number;
        operator: "between";
    };
    granularity?: Array<"ONE_MIN" | "FIVE_MIN" | "ONE_HOUR" | "ONE_DAY" | "ONE_WEEK"> | "ONE_MIN" | "FIVE_MIN" | "ONE_HOUR" | "ONE_DAY" | "ONE_WEEK";
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class TokenPriceCandlesticksRequest extends BaseRequest<TokenPriceCandlesticksRequestArgs, PaginatedResponse<TokenPriceCandlesticks>> {
    readonly body: TokenPriceCandlesticksRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/token/candlesticks";
    constructor(body?: TokenPriceCandlesticksRequestArgs);
}
