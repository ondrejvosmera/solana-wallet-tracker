import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface NftAllTimeStatsByWallet {
    ownerAccount: string | string[];
    /**
     * total realized profits (positive or negative) from selling NFTs (in SOL)
     */
    totalRealizedProfits: number;
    /**
     * total volume of NFTs purchased (in SOL)
     */
    volumeNftPurchased: number;
    /**
     * total volume of NFTs sold (in SOL)
     */
    volumeNftSold: number;
    /**
     * total volume of NFTs traded (in SOL)
     */
    volumeNftTraded: number;
    /**
     * profit and loss percentage (positive or negative) from selling NFTs
     */
    profitAndLossPercentage: number;
    /**
     * total count of nft purchased by the owner account.
     */
    nftPurchasedCount: number;
    /**
     * total count of nft sold by the owner account.
     */
    nftSoldCount: number;
    /**
     * total volume nft traded on magic eden
     */
    volumeNftTradedOnMagicEden: number;
    /**
     * total count of nft minted by the owner account.
     */
    nftMintedCount: number;
    /**
     * average number of days held after minting an NFT
     */
    averageDaysHeldAfterMinting: number;
    /**
     * average number of days held after buying an NFT
     */
    averageDaysHeldAfterBuying: number;
    /**
     * total volume of NFTs purchased as pool owner (in SOL)
     */
    volume_nft_purchased_as_pool_owner: number;
    /**
     * total volume of NFTs sold as pool owner (in SOL)
     */
    volume_nft_sold_as_pool_owner: number;
    /**
     * total count of nft purchased as pool owner by the owner account.
     */
    cnt_nft_purchased_as_pool_owner: number;
    /**
     * total count of nft sold as pool owner by the owner account.
     */
    cnt_nft_sold_as_pool_owner: number;
    /**
     * total count of nft minted on launchpad by the user account.
     */
    cnt_nft_minted_me: number;
}
export interface NftAllTimeStatsByWalletRequestArgs {
    ownerAccount?: string | string[];
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class NftAllTimeStatsByWalletRequest extends BaseRequest<NftAllTimeStatsByWalletRequestArgs, PaginatedResponse<NftAllTimeStatsByWallet>> {
    readonly body: NftAllTimeStatsByWalletRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/nft/magiceden/wallet-all-time-stats";
    constructor(body?: NftAllTimeStatsByWalletRequestArgs);
}
