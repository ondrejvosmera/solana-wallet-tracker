import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface NftPrimarySaleCollectionStats {
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionId: string;
    /**
     * Amount of a token unconverted for decimals, e.g. 1 SOL is 1,000,000,000 since SOL has 9 decimals.
     * `optional field`
     */
    mintPrice: number;
    /**
     * Number of minters for the collection
     * `optional field`
     */
    numMinters: number;
    /**
     * Tolal number of mints in the collection
     */
    totalMinted: number;
    /**
     * The total number of mints done by smart minters
     * `optional field`
     */
    totalMintedBySmartMinters: number;
    /**
     * The total volume minted in lamport
     */
    mintVolume: number;
    /**
     * The timestamp of the last minted block (in seconds)
     */
    latestMintBlockTime: number;
}
export interface NftPrimarySaleCollectionStatsRequestArgs {
    latestMintBlockTime?: {
        operator: "=" | "!=" | ">" | "<" | ">=" | "<=";
        /**
     * The timestamp of the last minted block (in seconds)
     */
        value: number;
    } | number;
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionId?: string;
    /**
     * Number of minters for the collection
     * `optional field`
     */
    numMinters?: number;
    /**
     * Amount of a token unconverted for decimals, e.g. 1 SOL is 1,000,000,000 since SOL has 9 decimals.
     * `optional field`
     */
    mintPrice?: number;
    /**
     * The total number of mints done by smart minters
     * `optional field`
     */
    totalMintedBySmartMinters?: number;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class NftPrimarySaleCollectionStatsRequest extends BaseRequest<NftPrimarySaleCollectionStatsRequestArgs, PaginatedResponse<NftPrimarySaleCollectionStats>> {
    readonly body: NftPrimarySaleCollectionStatsRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/nft/collection/stats/primary-sales";
    constructor(body?: NftPrimarySaleCollectionStatsRequestArgs);
}
