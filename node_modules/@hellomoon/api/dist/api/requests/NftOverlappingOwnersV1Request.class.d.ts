import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface NftOverlappingOwnersV1 {
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionOneId: string;
    /**
     * Number of NFTs owned by the owners of the first NFT collection_id
     */
    collectionOneNum: number;
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionTwoId: string;
    /**
     * Number of NFTs owned by the owners of the second NFT collection_two_id
     */
    collectionTwoNum: number;
    /**
     * Number of overlapping owners between the two collections
     */
    ownersOverlappings: number;
}
export interface NftOverlappingOwnersV1RequestArgs {
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionOneId?: string;
    /**
     * > To find the correct helloMoonCollectionId, **[click here](https://www.hellomoon.io/id?search=collection)**
     * and search a collection name. This list is continuously updated.
     * `optional field`
     */
    helloMoonCollectionTwoId?: string;
    ownersOverlappings?: {
        operator: "=" | "!=" | ">" | "<" | ">=" | "<=";
        /**
     * Number of overlapping owners between the two collections
     */
        value: number;
    } | number;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class NftOverlappingOwnersV1Request extends BaseRequest<NftOverlappingOwnersV1RequestArgs, PaginatedResponse<NftOverlappingOwnersV1>> {
    readonly body: NftOverlappingOwnersV1RequestArgs;
    readonly method = "POST";
    readonly url = "/v0/nft/collection/overlap";
    constructor(body?: NftOverlappingOwnersV1RequestArgs);
}
