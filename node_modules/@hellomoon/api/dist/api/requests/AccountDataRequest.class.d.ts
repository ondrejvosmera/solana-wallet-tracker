import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface AccountData {
    /**
     * First signature in a transaction, which can be used to track and verify the transaction status across
     * the complete ledger.
     *         It is a base-58 encoded string that is uniquely generated for each transaction.
     * `optional field`
     */
    transactionId: string;
    /**
     * public key of the account that received the reward (i.e, staking account)
     * `optional field`
     */
    pubkey: string;
    /**
     * The owner of the account
     */
    owner: string;
    /**
     * lamports given to the publickey
     */
    lamports: number;
    /**
     * The account type
     */
    accountType: string;
    /**
     * A JSON object field that contains the field/values of this account schema. Example: `{ "data": { "symbol":
     * "BCBY" } }`.
     *
     * For parsed account schema documentation, visit the explorer here:
     * [https://www.hellomoon.io/lookup/parsed-account-schemas](https://www.hellomoon.io/lookup/parsed-account-schemas).
     */
    accountData: any;
    /**
     * Numeric identifier of a block describing the slot that the block was produced in
     */
    blockId: number;
    /**
     * The rent epoch
     */
    rentEpoch: number;
}
export interface AccountDataRequestArgs {
    /**
     * First signature in a transaction, which can be used to track and verify the transaction status across
     * the complete ledger.
     *         It is a base-58 encoded string that is uniquely generated for each transaction.
     * `optional field`
     */
    transactionId?: string;
    /**
     * public key of the account that received the reward (i.e, staking account)
     * `optional field`
     */
    pubkey?: string;
    /**
     * The owner of the account
     */
    owner?: string;
    /**
     * lamports given to the publickey
     */
    lamports?: number;
    /**
     * The account type
     */
    accountType?: string;
    /**
     * A JSON object field that contains the field/values of this account schema. Example: `{ "data": { "symbol":
     * "BCBY" } }`.
     *
     * For parsed account schema documentation, visit the explorer here:
     * [https://www.hellomoon.io/lookup/parsed-account-schemas](https://www.hellomoon.io/lookup/parsed-account-schemas).
     */
    accountData?: any;
    /**
     * The number of results to return per page
     */
    limit?: number;
    /**
     * The page number to return
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     */
    paginationToken?: string;
}
export declare class AccountDataRequest extends BaseRequest<AccountDataRequestArgs, PaginatedResponse<AccountData>> {
    readonly body: AccountDataRequestArgs;
    readonly method = "POST";
    readonly url = "/v0/account-data";
    constructor(body?: AccountDataRequestArgs);
}
