import { BaseRequest } from "../BaseRequest.class";
import type { PaginatedResponse } from "../Response.interface";
export interface DefiProgramLeaderboardV2 {
    /**
     * The public key (address) of the account containing the program on chain.
     *       > You can also visit https://www.hellomoon.io/id?search=program to search for a program using a
     * user interface.
     */
    programId: string;
    /**
     * Name of token per the Metaplex standard
     * `optional field`
     */
    programName: string;
    granularity: Array<"THIRTY_MIN" | "ONE_HOUR" | "SIX_HOUR" | "HALF_DAY" | "ONE_DAY" | "ONE_WEEK" | "ONE_MONTH"> | "THIRTY_MIN" | "ONE_HOUR" | "SIX_HOUR" | "HALF_DAY" | "ONE_DAY" | "ONE_WEEK" | "ONE_MONTH";
    /**
     * The number of active users over the given granularity if available
     * `optional field`
     */
    activeUsers: number;
    /**
     * The number of new users over the given granularity if available
     * `optional field`
     */
    newUsers: number;
    /**
     * The number of deposits over the given granularity if available
     */
    deposits: number;
    /**
     * The number of withdrawals over the given granularity if available
     */
    withdraws: number;
    /**
     * The number of swaps over the given granularity if available
     */
    swaps: number;
    /**
     * The number of borrows over the given granularity if available
     */
    borrows: number;
    /**
     * The number of repayments over the given granularity if available
     */
    repayments: number;
    /**
     * The amount of liquidity added over the given granularity if available
     */
    addLiquidity: number;
    /**
     * The amount of liquidity removed over the given granularity if available
     */
    remLiquidity: number;
}
export interface DefiProgramLeaderboardV2RequestArgs {
    /**
     * The public key (address) of the account containing the program on chain.
     *       > You can also visit https://www.hellomoon.io/id?search=program to search for a program using a
     * user interface.
     */
    programId?: string;
    granularity?: Array<"THIRTY_MIN" | "ONE_HOUR" | "SIX_HOUR" | "HALF_DAY" | "ONE_DAY" | "ONE_WEEK" | "ONE_MONTH"> | "THIRTY_MIN" | "ONE_HOUR" | "SIX_HOUR" | "HALF_DAY" | "ONE_DAY" | "ONE_WEEK" | "ONE_MONTH";
    /**
     * The number of new users over the given granularity if available
     * `optional field`
     */
    newUsers?: number;
    /**
     * The number of active users over the given granularity if available
     * `optional field`
     */
    activeUsers?: number;
    /**
     * The number of results to return per page
     * `optional field`
     */
    limit?: number;
    /**
     * The page number to return
     * `optional field`
     */
    page?: number;
    /**
     * The pagination token to use to keep your position in the results
     * `optional field`
     */
    paginationToken?: string;
}
export declare class DefiProgramLeaderboardV2Request extends BaseRequest<DefiProgramLeaderboardV2RequestArgs, PaginatedResponse<DefiProgramLeaderboardV2>> {
    readonly body: DefiProgramLeaderboardV2RequestArgs;
    readonly method = "POST";
    readonly url = "/v0/defi/program-stats";
    constructor(body?: DefiProgramLeaderboardV2RequestArgs);
}
