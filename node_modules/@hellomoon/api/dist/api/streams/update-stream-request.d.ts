import { BaseDataStream } from "../../subscriptions/models/base-data-stream.class";
import type { DataStreamType } from "../../subscriptions/util/datastream-filters.const";
import { BaseRequest } from "../BaseRequest.class";
import type { DataStream } from "../../subscriptions/models/data-stream.interface";
import type { BaseDataStreamFilter } from "../../subscriptions/models/base-data-stream-filter.type";
interface UpdateStreamsRequestArgs {
}
export declare class UpdateStreamsRequest extends BaseRequest<UpdateStreamsRequestArgs, BaseDataStream<BaseDataStreamFilter> | null> {
    readonly subscription: DataStream<Record<string, DataStreamType<string>>>;
    readonly method = "PUT";
    readonly url = "/v0/subscriptions/update";
    constructor(subscription: DataStream<Record<string, DataStreamType<string>>>);
    _send(apiKey: string, baseUrl?: string): Promise<BaseDataStream<BaseDataStreamFilter> | null>;
}
export {};
